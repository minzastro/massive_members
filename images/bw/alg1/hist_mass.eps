%!PS-Adobe-2.0
%%Title: hist_mass.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Mon May 17 14:30:00 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hist_mass.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Mints Alexey)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon May 17 14:30:00 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1794 1092 M
63 0 V
4953 0 R
-63 0 V
stroke
1638 1092 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1e-05)]
] -86.7 MRshow
1.000 UL
LTb
1794 1311 M
31 0 V
4985 0 R
-31 0 V
1794 1600 M
31 0 V
4985 0 R
-31 0 V
1794 1749 M
31 0 V
4985 0 R
-31 0 V
-4985 70 R
63 0 V
4953 0 R
-63 0 V
stroke
1638 1819 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.0001)]
] -86.7 MRshow
1.000 UL
LTb
1794 2038 M
31 0 V
4985 0 R
-31 0 V
1794 2327 M
31 0 V
4985 0 R
-31 0 V
1794 2476 M
31 0 V
4985 0 R
-31 0 V
-4985 70 R
63 0 V
4953 0 R
-63 0 V
stroke
1638 2546 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.001)]
] -86.7 MRshow
1.000 UL
LTb
1794 2765 M
31 0 V
4985 0 R
-31 0 V
1794 3055 M
31 0 V
4985 0 R
-31 0 V
1794 3203 M
31 0 V
4985 0 R
-31 0 V
-4985 71 R
63 0 V
4953 0 R
-63 0 V
stroke
1638 3274 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.01)]
] -86.7 MRshow
1.000 UL
LTb
1794 3493 M
31 0 V
4985 0 R
-31 0 V
1794 3782 M
31 0 V
4985 0 R
-31 0 V
1794 3930 M
31 0 V
4985 0 R
-31 0 V
-4985 71 R
63 0 V
4953 0 R
-63 0 V
stroke
1638 4001 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MRshow
1.000 UL
LTb
1794 4220 M
31 0 V
4985 0 R
-31 0 V
1794 4509 M
31 0 V
4985 0 R
-31 0 V
1794 4658 M
31 0 V
4985 0 R
-31 0 V
-4985 70 R
63 0 V
4953 0 R
-63 0 V
stroke
1638 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MRshow
1.000 UL
LTb
1794 1092 M
0 31 V
0 3605 R
0 -31 V
2236 1092 M
0 31 V
0 3605 R
0 -31 V
2549 1092 M
0 31 V
0 3605 R
0 -31 V
2792 1092 M
0 31 V
0 3605 R
0 -31 V
2991 1092 M
0 31 V
0 3605 R
0 -31 V
3159 1092 M
0 31 V
0 3605 R
0 -31 V
3304 1092 M
0 31 V
0 3605 R
0 -31 V
3432 1092 M
0 31 V
0 3605 R
0 -31 V
3547 1092 M
0 63 V
0 3573 R
0 -63 V
stroke
3547 832 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 10)]
] -86.7 MCshow
1.000 UL
LTb
4302 1092 M
0 31 V
0 3605 R
0 -31 V
4744 1092 M
0 31 V
0 3605 R
0 -31 V
5057 1092 M
0 31 V
0 3605 R
0 -31 V
5300 1092 M
0 31 V
0 3605 R
0 -31 V
5499 1092 M
0 31 V
0 3605 R
0 -31 V
5667 1092 M
0 31 V
0 3605 R
0 -31 V
5812 1092 M
0 31 V
0 3605 R
0 -31 V
5940 1092 M
0 31 V
0 3605 R
0 -31 V
6055 1092 M
0 63 V
0 3573 R
0 -63 V
stroke
6055 832 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 100)]
] -86.7 MCshow
1.000 UL
LTb
6810 1092 M
0 31 V
0 3605 R
0 -31 V
stroke
1794 4728 N
0 -3636 V
5016 0 V
0 3636 V
-5016 0 V
Z stroke
LCb setrgbcolor
4302 442 M
[ [(Helvetica) 260.0 0.0 true true 0 (m)]
[(Helvetica) 208.0 -78.0 true true 0 (1,2,3)]
] -60.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
3.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
2821 3337 M
491 479 V
337 155 V
257 13 V
208 -27 V
175 -27 V
150 -63 V
132 -22 V
118 -73 V
106 -37 V
97 -64 V
89 -31 V
82 -27 V
77 -66 V
71 -15 V
67 -53 V
63 -32 V
60 -29 V
57 -44 V
53 -66 V
52 24 V
49 -26 V
46 -50 V
45 -52 V
43 -8 V
42 -67 V
40 -8 V
38 29 V
38 -54 V
36 4 V
35 -41 V
33 -24 V
33 -28 V
32 -28 V
31 52 V
30 -74 V
29 -27 V
28 -51 V
28 38 V
27 10 V
27 -63 V
25 -32 V
26 24 V
24 19 V
24 -57 V
24 -4 V
23 -54 V
23 21 V
22 -168 V
21 40 V
2821 3337 Pls
3312 3816 Pls
3649 3971 Pls
3906 3984 Pls
4114 3957 Pls
4289 3930 Pls
4439 3867 Pls
4571 3845 Pls
4689 3772 Pls
4795 3735 Pls
4892 3671 Pls
4981 3640 Pls
5063 3613 Pls
5140 3547 Pls
5211 3532 Pls
5278 3479 Pls
5341 3447 Pls
5401 3418 Pls
5458 3374 Pls
5511 3308 Pls
5563 3332 Pls
5612 3306 Pls
5658 3256 Pls
5703 3204 Pls
5746 3196 Pls
5788 3129 Pls
5828 3121 Pls
5866 3150 Pls
5904 3096 Pls
5940 3100 Pls
5975 3059 Pls
6008 3035 Pls
6041 3007 Pls
6073 2979 Pls
6104 3031 Pls
6134 2957 Pls
6163 2930 Pls
6191 2879 Pls
6219 2917 Pls
6246 2927 Pls
6273 2864 Pls
6298 2832 Pls
6324 2856 Pls
6348 2875 Pls
6372 2818 Pls
6396 2814 Pls
6419 2760 Pls
6442 2781 Pls
6464 2613 Pls
6485 2653 Pls
3.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
2138 1092 M
11 56 V
50 242 V
51 226 V
51 210 V
50 195 V
51 181 V
51 168 V
50 156 V
51 144 V
51 133 V
50 123 V
51 113 V
51 105 V
50 95 V
51 88 V
51 81 V
50 73 V
51 67 V
51 61 V
50 55 V
51 50 V
51 44 V
50 40 V
51 35 V
51 31 V
50 26 V
51 24 V
51 19 V
50 17 V
51 13 V
51 10 V
50 8 V
51 5 V
51 2 V
50 1 V
51 -2 V
51 -4 V
50 -5 V
51 -8 V
51 -9 V
50 -10 V
51 -12 V
51 -14 V
50 -15 V
51 -16 V
51 -17 V
50 -18 V
51 -19 V
51 -20 V
50 -21 V
51 -21 V
51 -23 V
50 -23 V
51 -24 V
51 -25 V
50 -25 V
51 -26 V
51 -26 V
50 -27 V
51 -27 V
51 -28 V
50 -28 V
51 -28 V
51 -29 V
50 -30 V
51 -29 V
51 -30 V
50 -30 V
51 -30 V
51 -31 V
50 -31 V
51 -31 V
51 -31 V
50 -32 V
51 -32 V
51 -31 V
50 -33 V
51 -32 V
51 -32 V
50 -32 V
51 -33 V
51 -33 V
50 -33 V
51 -32 V
51 -33 V
50 -34 V
51 -33 V
51 -33 V
50 -33 V
51 -34 V
51 -33 V
50 -34 V
51 -33 V
1.000 UP
stroke
LT2
/Helvetica findfont 260 scalefont setfont
2611 3593 M
558 541 V
367 86 V
274 -68 V
219 -84 V
182 -114 V
156 -111 V
137 -101 V
121 -87 V
109 -96 V
99 -121 V
91 -91 V
84 -61 V
78 -54 V
73 -108 V
68 -65 V
64 -80 V
60 -22 V
58 -64 V
54 -29 V
52 -144 V
50 24 V
47 -63 V
46 -77 V
43 -68 V
42 -209 V
40 107 V
39 14 V
38 -63 V
36 -219 V
35 161 V
34 -97 V
33 -31 V
32 -33 V
32 -185 V
30 -162 V
29 91 V
29 -219 V
28 0 V
27 0 V
27 -219 V
26 219 V
25 -219 V
25 219 V
0 -599 V
48 0 R
0 380 V
0 -380 V
68 0 R
0 380 V
21 0 V
2611 3593 Crs
3169 4134 Crs
3536 4220 Crs
3810 4152 Crs
4029 4068 Crs
4211 3954 Crs
4367 3843 Crs
4504 3742 Crs
4625 3655 Crs
4734 3559 Crs
4833 3438 Crs
4924 3347 Crs
5008 3286 Crs
5086 3232 Crs
5159 3124 Crs
5227 3059 Crs
5291 2979 Crs
5351 2957 Crs
5409 2893 Crs
5463 2864 Crs
5515 2720 Crs
5565 2744 Crs
5612 2681 Crs
5658 2604 Crs
5701 2536 Crs
5743 2327 Crs
5783 2434 Crs
5822 2448 Crs
5860 2385 Crs
5896 2166 Crs
5931 2327 Crs
5965 2230 Crs
5998 2199 Crs
6030 2166 Crs
6062 1981 Crs
6092 1819 Crs
6121 1910 Crs
6150 1691 Crs
6178 1691 Crs
6205 1691 Crs
6232 1472 Crs
6258 1691 Crs
6283 1472 Crs
6308 1691 Crs
6356 1472 Crs
6424 1472 Crs
6445 1472 Crs
3.000 UL
LT1
/Helvetica findfont 260 scalefont setfont
1983 1092 M
14 81 V
50 281 V
51 260 V
51 242 V
50 223 V
51 207 V
51 190 V
50 176 V
51 162 V
51 148 V
50 137 V
51 125 V
51 113 V
50 104 V
51 94 V
51 85 V
50 77 V
51 68 V
51 62 V
50 54 V
51 47 V
51 42 V
50 35 V
51 30 V
51 25 V
50 20 V
51 16 V
51 11 V
50 7 V
51 4 V
51 0 V
50 -3 V
51 -7 V
51 -9 V
50 -12 V
51 -15 V
51 -18 V
50 -19 V
51 -22 V
51 -24 V
50 -25 V
51 -28 V
51 -29 V
50 -31 V
51 -33 V
51 -34 V
50 -35 V
51 -37 V
51 -37 V
50 -39 V
51 -41 V
51 -41 V
50 -42 V
51 -43 V
51 -44 V
50 -46 V
51 -46 V
51 -46 V
50 -48 V
51 -49 V
51 -49 V
50 -50 V
51 -51 V
51 -52 V
50 -52 V
51 -53 V
51 -54 V
50 -55 V
51 -56 V
51 -57 V
50 -58 V
51 -59 V
51 -60 V
50 -61 V
51 -63 V
51 -64 V
50 -67 V
51 -68 V
51 -70 V
50 -73 V
51 -77 V
51 -80 V
50 -86 V
51 -93 V
51 -103 V
50 -116 V
51 -139 V
51 -181 V
30 -176 V
1.000 UP
stroke
LT6
/Helvetica findfont 260 scalefont setfont
2334 3250 M
426 683 V
306 218 V
238 30 V
196 -51 V
166 -97 V
144 -93 V
127 -105 V
113 -99 V
103 -105 V
94 -119 V
87 -98 V
80 -91 V
75 -33 V
70 -132 V
65 -73 V
62 -41 V
59 -70 V
56 -95 V
53 -178 V
50 48 V
48 -29 V
46 -174 V
45 -45 V
42 -67 V
41 0 V
40 -67 V
38 -168 V
37 58 V
35 -128 V
35 0 V
33 -42 V
33 -106 V
31 57 V
31 -219 V
30 0 V
29 91 V
28 0 V
27 -438 V
27 0 V
26 347 V
26 -128 V
25 -219 V
0 -380 V
48 0 R
0 727 V
24 -347 V
0 -380 V
2334 3250 Star
2760 3933 Star
3066 4151 Star
3304 4181 Star
3500 4130 Star
3666 4033 Star
3810 3940 Star
3937 3835 Star
4050 3736 Star
4153 3631 Star
4247 3512 Star
4334 3414 Star
4414 3323 Star
4489 3290 Star
4559 3158 Star
4624 3085 Star
4686 3044 Star
4745 2974 Star
4801 2879 Star
4854 2701 Star
4904 2749 Star
4952 2720 Star
4998 2546 Star
5043 2501 Star
5085 2434 Star
5126 2434 Star
5166 2367 Star
5204 2199 Star
5241 2257 Star
5276 2129 Star
5311 2129 Star
5344 2087 Star
5377 1981 Star
5408 2038 Star
5439 1819 Star
5469 1819 Star
5498 1910 Star
5526 1910 Star
5553 1472 Star
5580 1472 Star
5606 1819 Star
5632 1691 Star
5657 1472 Star
5705 1819 Star
5729 1472 Star
3.000 UL
LT6
/Helvetica findfont 260 scalefont setfont
1900 1092 M
46 281 V
51 283 V
50 262 V
51 241 V
51 222 V
50 204 V
51 188 V
51 171 V
50 157 V
51 142 V
51 130 V
50 117 V
51 105 V
51 95 V
50 84 V
51 75 V
51 66 V
50 57 V
51 49 V
51 42 V
50 35 V
51 28 V
51 22 V
50 16 V
51 11 V
51 5 V
50 1 V
51 -4 V
51 -8 V
50 -13 V
51 -16 V
51 -19 V
50 -23 V
51 -27 V
51 -29 V
50 -32 V
51 -34 V
51 -38 V
50 -39 V
51 -42 V
51 -44 V
50 -46 V
51 -47 V
51 -50 V
50 -51 V
51 -53 V
51 -55 V
50 -55 V
51 -58 V
51 -58 V
50 -60 V
51 -62 V
51 -62 V
50 -64 V
51 -64 V
51 -66 V
50 -67 V
51 -68 V
51 -69 V
50 -70 V
51 -72 V
51 -72 V
50 -73 V
51 -75 V
51 -75 V
50 -77 V
51 -78 V
51 -80 V
50 -81 V
51 -82 V
51 -84 V
50 -85 V
51 -88 V
51 -89 V
50 -92 V
51 -94 V
51 -98 V
50 -100 V
49 -101 V
stroke
1.000 UL
LTb
1794 4728 N
0 -3636 V
5016 0 V
0 3636 V
-5016 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
