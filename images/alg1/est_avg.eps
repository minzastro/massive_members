%!PS-Adobe-2.0
%%Title: est_avg.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Sep  9 15:50:58 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (est_avg.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Mints Alexey)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep  9 15:50:58 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1534 520 M
63 0 V
5161 0 R
-63 0 V
stroke
1378 520 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.0001)]
] -86.7 MRshow
1.000 UL
LTb
1534 837 M
31 0 V
5193 0 R
-31 0 V
1534 1022 M
31 0 V
5193 0 R
-31 0 V
1534 1153 M
31 0 V
5193 0 R
-31 0 V
1534 1255 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 1572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.001)]
] -86.7 MRshow
1.000 UL
LTb
1534 1889 M
31 0 V
5193 0 R
-31 0 V
1534 2074 M
31 0 V
5193 0 R
-31 0 V
1534 2205 M
31 0 V
5193 0 R
-31 0 V
1534 2307 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 2624 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.01)]
] -86.7 MRshow
1.000 UL
LTb
1534 2941 M
31 0 V
5193 0 R
-31 0 V
1534 3126 M
31 0 V
5193 0 R
-31 0 V
1534 3257 M
31 0 V
5193 0 R
-31 0 V
1534 3359 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 3676 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MRshow
1.000 UL
LTb
1534 3993 M
31 0 V
5193 0 R
-31 0 V
1534 4178 M
31 0 V
5193 0 R
-31 0 V
1534 4309 M
31 0 V
5193 0 R
-31 0 V
1534 4411 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MRshow
1.000 UL
LTb
1534 520 M
0 31 V
0 4177 R
0 -31 V
1644 520 M
0 31 V
0 4177 R
0 -31 V
1741 520 M
0 31 V
0 4177 R
0 -31 V
1828 520 M
0 63 V
0 4145 R
0 -63 V
stroke
1828 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 100)]
] -86.7 MCshow
1.000 UL
LTb
2398 520 M
0 31 V
0 4177 R
0 -31 V
2732 520 M
0 31 V
0 4177 R
0 -31 V
2968 520 M
0 31 V
0 4177 R
0 -31 V
3152 520 M
0 31 V
0 4177 R
0 -31 V
3302 520 M
0 31 V
0 4177 R
0 -31 V
3429 520 M
0 31 V
0 4177 R
0 -31 V
3539 520 M
0 31 V
0 4177 R
0 -31 V
3636 520 M
0 31 V
0 4177 R
0 -31 V
3722 520 M
0 63 V
0 4145 R
0 -63 V
stroke
3722 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1000)]
] -86.7 MCshow
1.000 UL
LTb
4293 520 M
0 31 V
0 4177 R
0 -31 V
4626 520 M
0 31 V
0 4177 R
0 -31 V
4863 520 M
0 31 V
0 4177 R
0 -31 V
5047 520 M
0 31 V
0 4177 R
0 -31 V
5197 520 M
0 31 V
0 4177 R
0 -31 V
5324 520 M
0 31 V
0 4177 R
0 -31 V
5434 520 M
0 31 V
0 4177 R
0 -31 V
5530 520 M
0 31 V
0 4177 R
0 -31 V
5617 520 M
0 63 V
0 4145 R
0 -63 V
stroke
5617 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 10000)]
] -86.7 MCshow
1.000 UL
LTb
6188 520 M
0 31 V
0 4177 R
0 -31 V
6521 520 M
0 31 V
0 4177 R
0 -31 V
6758 520 M
0 31 V
0 4177 R
0 -31 V
stroke
1534 4728 N
0 -4208 V
5224 0 V
0 4208 V
-5224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
1576 2879 M
101 670 V
100 376 V
100 290 V
101 141 V
100 182 V
100 61 V
101 76 V
100 19 V
101 -3 V
100 37 V
100 -49 V
101 30 V
100 -18 V
101 -54 V
100 13 V
100 -9 V
101 -39 V
100 -30 V
101 -60 V
100 14 V
100 -69 V
101 -6 V
100 -14 V
100 -57 V
101 -5 V
100 -65 V
101 -2 V
100 -21 V
100 -65 V
101 -31 V
100 -43 V
101 8 V
100 -25 V
100 -79 V
101 -28 V
100 -71 V
100 27 V
101 -6 V
100 -38 V
101 -21 V
100 -65 V
100 18 V
101 -111 V
100 42 V
101 -20 V
100 -60 V
100 15 V
101 -53 V
100 -169 V
1576 2879 Pls
1677 3549 Pls
1777 3925 Pls
1877 4215 Pls
1978 4356 Pls
2078 4538 Pls
2178 4599 Pls
2279 4675 Pls
2379 4694 Pls
2480 4691 Pls
2580 4728 Pls
2680 4679 Pls
2781 4709 Pls
2881 4691 Pls
2982 4637 Pls
3082 4650 Pls
3182 4641 Pls
3283 4602 Pls
3383 4572 Pls
3484 4512 Pls
3584 4526 Pls
3684 4457 Pls
3785 4451 Pls
3885 4437 Pls
3985 4380 Pls
4086 4375 Pls
4186 4310 Pls
4287 4308 Pls
4387 4287 Pls
4487 4222 Pls
4588 4191 Pls
4688 4148 Pls
4789 4156 Pls
4889 4131 Pls
4989 4052 Pls
5090 4024 Pls
5190 3953 Pls
5290 3980 Pls
5391 3974 Pls
5491 3936 Pls
5592 3915 Pls
5692 3850 Pls
5792 3868 Pls
5893 3757 Pls
5993 3799 Pls
6094 3779 Pls
6194 3719 Pls
6294 3734 Pls
6395 3681 Pls
6495 3512 Pls
1.000 UP
1.000 UL
LT1
/Helvetica findfont 260 scalefont setfont
1992 1916 M
95 538 V
95 721 V
95 372 V
95 310 V
95 225 V
95 203 V
95 159 V
95 91 V
95 85 V
95 65 V
95 11 V
95 32 V
95 -2 V
95 -32 V
95 -16 V
95 -21 V
95 -8 V
94 -37 V
95 -82 V
95 -39 V
95 -51 V
95 -76 V
95 -53 V
95 -31 V
95 -62 V
95 -129 V
95 -51 V
95 -87 V
95 -75 V
95 -53 V
95 -72 V
95 -104 V
95 -110 V
95 -20 V
95 -51 V
94 -165 V
95 -58 V
95 -33 V
95 -242 V
95 -24 V
95 -108 V
95 -83 V
95 -38 V
95 -381 V
95 -233 V
95 -83 V
95 -102 V
95 -317 V
95 0 V
1992 1916 Crs
2087 2454 Crs
2182 3175 Crs
2277 3547 Crs
2372 3857 Crs
2467 4082 Crs
2562 4285 Crs
2657 4444 Crs
2752 4535 Crs
2847 4620 Crs
2942 4685 Crs
3037 4696 Crs
3132 4728 Crs
3227 4726 Crs
3322 4694 Crs
3417 4678 Crs
3512 4657 Crs
3607 4649 Crs
3701 4612 Crs
3796 4530 Crs
3891 4491 Crs
3986 4440 Crs
4081 4364 Crs
4176 4311 Crs
4271 4280 Crs
4366 4218 Crs
4461 4089 Crs
4556 4038 Crs
4651 3951 Crs
4746 3876 Crs
4841 3823 Crs
4936 3751 Crs
5031 3647 Crs
5126 3537 Crs
5221 3517 Crs
5316 3466 Crs
5410 3301 Crs
5505 3243 Crs
5600 3210 Crs
5695 2968 Crs
5790 2944 Crs
5885 2836 Crs
5980 2753 Crs
6075 2715 Crs
6170 2334 Crs
6265 2101 Crs
6360 2018 Crs
6455 1916 Crs
6550 1599 Crs
6645 1599 Crs
1.000 UP
1.000 UL
LT2
/Helvetica findfont 260 scalefont setfont
2169 1751 M
81 0 V
80 704 V
81 502 V
81 382 V
80 326 V
81 205 V
80 221 V
81 158 V
81 141 V
80 94 V
81 101 V
81 59 V
80 32 V
81 22 V
81 30 V
80 -5 V
81 -30 V
80 -48 V
81 -23 V
81 -44 V
80 -42 V
81 -64 V
81 -62 V
80 -58 V
81 -84 V
81 -103 V
80 -67 V
81 -110 V
80 -85 V
81 -54 V
81 -94 V
80 -85 V
81 -102 V
81 -81 V
80 -197 V
81 -33 V
80 -80 V
81 -220 V
81 -71 V
80 -114 V
81 -132 V
81 -185 V
80 -71 V
81 -246 V
81 61 V
80 -214 V
81 -234 V
80 132 V
0 -1363 V
2169 1751 Star
2250 1751 Star
2330 2455 Star
2411 2957 Star
2492 3339 Star
2572 3665 Star
2653 3870 Star
2733 4091 Star
2814 4249 Star
2895 4390 Star
2975 4484 Star
3056 4585 Star
3137 4644 Star
3217 4676 Star
3298 4698 Star
3379 4728 Star
3459 4723 Star
3540 4693 Star
3620 4645 Star
3701 4622 Star
3782 4578 Star
3862 4536 Star
3943 4472 Star
4024 4410 Star
4104 4352 Star
4185 4268 Star
4266 4165 Star
4346 4098 Star
4427 3988 Star
4507 3903 Star
4588 3849 Star
4669 3755 Star
4749 3670 Star
4830 3568 Star
4911 3487 Star
4991 3290 Star
5072 3257 Star
5152 3177 Star
5233 2957 Star
5314 2886 Star
5394 2772 Star
5475 2640 Star
5556 2455 Star
5636 2384 Star
5717 2138 Star
5798 2199 Star
5878 1985 Star
5959 1751 Star
6039 1883 Star
1.000 UL
LTb
1534 4728 N
0 -4208 V
5224 0 V
0 4208 V
-5224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
