%!PS-Adobe-2.0
%%Title: est_max.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Sep  9 15:50:56 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (est_max.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Mints Alexey)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep  9 15:50:56 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1534 520 M
63 0 V
5161 0 R
-63 0 V
stroke
1378 520 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.0001)]
] -86.7 MRshow
1.000 UL
LTb
1534 837 M
31 0 V
5193 0 R
-31 0 V
1534 1022 M
31 0 V
5193 0 R
-31 0 V
1534 1153 M
31 0 V
5193 0 R
-31 0 V
1534 1255 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 1572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.001)]
] -86.7 MRshow
1.000 UL
LTb
1534 1889 M
31 0 V
5193 0 R
-31 0 V
1534 2074 M
31 0 V
5193 0 R
-31 0 V
1534 2205 M
31 0 V
5193 0 R
-31 0 V
1534 2307 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 2624 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.01)]
] -86.7 MRshow
1.000 UL
LTb
1534 2941 M
31 0 V
5193 0 R
-31 0 V
1534 3126 M
31 0 V
5193 0 R
-31 0 V
1534 3257 M
31 0 V
5193 0 R
-31 0 V
1534 3359 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 3676 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MRshow
1.000 UL
LTb
1534 3993 M
31 0 V
5193 0 R
-31 0 V
1534 4178 M
31 0 V
5193 0 R
-31 0 V
1534 4309 M
31 0 V
5193 0 R
-31 0 V
1534 4411 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MRshow
1.000 UL
LTb
1534 520 M
0 31 V
0 4177 R
0 -31 V
1644 520 M
0 31 V
0 4177 R
0 -31 V
1741 520 M
0 31 V
0 4177 R
0 -31 V
1828 520 M
0 63 V
0 4145 R
0 -63 V
stroke
1828 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 100)]
] -86.7 MCshow
1.000 UL
LTb
2398 520 M
0 31 V
0 4177 R
0 -31 V
2732 520 M
0 31 V
0 4177 R
0 -31 V
2968 520 M
0 31 V
0 4177 R
0 -31 V
3152 520 M
0 31 V
0 4177 R
0 -31 V
3302 520 M
0 31 V
0 4177 R
0 -31 V
3429 520 M
0 31 V
0 4177 R
0 -31 V
3539 520 M
0 31 V
0 4177 R
0 -31 V
3636 520 M
0 31 V
0 4177 R
0 -31 V
3722 520 M
0 63 V
0 4145 R
0 -63 V
stroke
3722 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1000)]
] -86.7 MCshow
1.000 UL
LTb
4293 520 M
0 31 V
0 4177 R
0 -31 V
4626 520 M
0 31 V
0 4177 R
0 -31 V
4863 520 M
0 31 V
0 4177 R
0 -31 V
5047 520 M
0 31 V
0 4177 R
0 -31 V
5197 520 M
0 31 V
0 4177 R
0 -31 V
5324 520 M
0 31 V
0 4177 R
0 -31 V
5434 520 M
0 31 V
0 4177 R
0 -31 V
5530 520 M
0 31 V
0 4177 R
0 -31 V
5617 520 M
0 63 V
0 4145 R
0 -63 V
stroke
5617 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 10000)]
] -86.7 MCshow
1.000 UL
LTb
6188 520 M
0 31 V
0 4177 R
0 -31 V
6521 520 M
0 31 V
0 4177 R
0 -31 V
6758 520 M
0 31 V
0 4177 R
0 -31 V
stroke
1534 4728 N
0 -4208 V
5224 0 V
0 4208 V
-5224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
2251 2213 M
83 0 V
82 436 V
83 280 V
82 362 V
82 -64 V
83 354 V
82 138 V
83 186 V
82 118 V
82 128 V
83 39 V
82 175 V
83 69 V
82 46 V
82 85 V
83 40 V
82 2 V
83 45 V
82 39 V
83 -27 V
82 43 V
82 21 V
83 -46 V
82 16 V
83 16 V
82 -11 V
82 -34 V
83 -38 V
82 15 V
83 -66 V
82 6 V
82 -25 V
83 -17 V
82 -59 V
83 -9 V
82 -44 V
82 -60 V
83 1 V
82 -47 V
83 -49 V
82 -77 V
83 6 V
82 -43 V
82 -21 V
83 -45 V
82 -50 V
83 -41 V
82 0 V
82 -151 V
2251 2213 Pls
2334 2213 Pls
2416 2649 Pls
2499 2929 Pls
2581 3291 Pls
2663 3227 Pls
2746 3581 Pls
2828 3719 Pls
2911 3905 Pls
2993 4023 Pls
3075 4151 Pls
3158 4190 Pls
3240 4365 Pls
3323 4434 Pls
3405 4480 Pls
3487 4565 Pls
3570 4605 Pls
3652 4607 Pls
3735 4652 Pls
3817 4691 Pls
3900 4664 Pls
3982 4707 Pls
4064 4728 Pls
4147 4682 Pls
4229 4698 Pls
4312 4714 Pls
4394 4703 Pls
4476 4669 Pls
4559 4631 Pls
4641 4646 Pls
4724 4580 Pls
4806 4586 Pls
4888 4561 Pls
4971 4544 Pls
5053 4485 Pls
5136 4476 Pls
5218 4432 Pls
5300 4372 Pls
5383 4373 Pls
5465 4326 Pls
5548 4277 Pls
5630 4200 Pls
5713 4206 Pls
5795 4163 Pls
5877 4142 Pls
5960 4097 Pls
6042 4047 Pls
6125 4006 Pls
6207 4006 Pls
6289 3855 Pls
1.000 UP
1.000 UL
LT1
/Helvetica findfont 260 scalefont setfont
2377 1313 M
87 502 V
88 317 V
87 550 V
88 427 V
87 260 V
88 224 V
87 206 V
88 184 V
87 175 V
88 162 V
87 94 V
88 91 V
87 87 V
88 68 V
87 12 V
88 56 V
87 -5 V
88 5 V
87 -22 V
88 -15 V
87 4 V
88 -28 V
87 -49 V
88 -62 V
87 -39 V
88 -84 V
87 -45 V
88 -44 V
87 -43 V
88 -153 V
87 -58 V
88 -115 V
87 -31 V
88 -63 V
87 -145 V
88 -116 V
87 -9 V
88 -115 V
87 -112 V
88 -86 V
87 -256 V
88 30 V
87 -176 V
88 -77 V
87 -300 V
88 -256 V
87 -131 V
88 -317 V
87 -185 V
2377 1313 Crs
2464 1815 Crs
2552 2132 Crs
2639 2682 Crs
2727 3109 Crs
2814 3369 Crs
2902 3593 Crs
2989 3799 Crs
3077 3983 Crs
3164 4158 Crs
3252 4320 Crs
3339 4414 Crs
3427 4505 Crs
3514 4592 Crs
3602 4660 Crs
3689 4672 Crs
3777 4728 Crs
3864 4723 Crs
3952 4728 Crs
4039 4706 Crs
4127 4691 Crs
4214 4695 Crs
4302 4667 Crs
4389 4618 Crs
4477 4556 Crs
4564 4517 Crs
4652 4433 Crs
4739 4388 Crs
4827 4344 Crs
4914 4301 Crs
5002 4148 Crs
5089 4090 Crs
5177 3975 Crs
5264 3944 Crs
5352 3881 Crs
5439 3736 Crs
5527 3620 Crs
5614 3611 Crs
5702 3496 Crs
5789 3384 Crs
5877 3298 Crs
5964 3042 Crs
6052 3072 Crs
6139 2896 Crs
6227 2819 Crs
6314 2519 Crs
6402 2263 Crs
6489 2132 Crs
6577 1815 Crs
6664 1630 Crs
1.000 UP
1.000 UL
LT2
/Helvetica findfont 260 scalefont setfont
2497 1570 M
77 0 V
78 186 V
77 843 V
77 279 V
78 360 V
77 264 V
77 195 V
78 257 V
77 139 V
78 168 V
77 100 V
77 117 V
78 85 V
77 64 V
77 34 V
78 29 V
77 27 V
78 11 V
77 -32 V
77 -34 V
78 -26 V
77 -36 V
77 -39 V
78 -73 V
77 -54 V
78 -62 V
77 -85 V
77 -93 V
78 -104 V
77 -67 V
77 -124 V
78 -13 V
77 -150 V
78 -92 V
77 -69 V
77 -157 V
78 -145 V
77 -23 V
77 -267 V
78 -55 V
77 -186 V
78 -97 V
77 -154 V
77 -32 V
78 -255 V
77 -61 V
77 -256 V
78 0 V
0 -1367 V
2497 1570 Star
2574 1570 Star
2652 1756 Star
2729 2599 Star
2806 2878 Star
2884 3238 Star
2961 3502 Star
3038 3697 Star
3116 3954 Star
3193 4093 Star
3271 4261 Star
3348 4361 Star
3425 4478 Star
3503 4563 Star
3580 4627 Star
3657 4661 Star
3735 4690 Star
3812 4717 Star
3890 4728 Star
3967 4696 Star
4044 4662 Star
4122 4636 Star
4199 4600 Star
4276 4561 Star
4354 4488 Star
4431 4434 Star
4509 4372 Star
4586 4287 Star
4663 4194 Star
4741 4090 Star
4818 4023 Star
4895 3899 Star
4973 3886 Star
5050 3736 Star
5128 3644 Star
5205 3575 Star
5282 3418 Star
5360 3273 Star
5437 3250 Star
5514 2983 Star
5592 2928 Star
5669 2742 Star
5747 2645 Star
5824 2491 Star
5901 2459 Star
5979 2204 Star
6056 2143 Star
6133 1887 Star
6211 1887 Star
1.000 UL
LTb
1534 4728 N
0 -4208 V
5224 0 V
0 4208 V
-5224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
