%!PS-Adobe-2.0
%%Title: est_med.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Sep  9 15:50:57 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (est_med.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Mints Alexey)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep  9 15:50:57 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1534 520 M
63 0 V
5161 0 R
-63 0 V
stroke
1378 520 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.0001)]
] -86.7 MRshow
1.000 UL
LTb
1534 837 M
31 0 V
5193 0 R
-31 0 V
1534 1022 M
31 0 V
5193 0 R
-31 0 V
1534 1153 M
31 0 V
5193 0 R
-31 0 V
1534 1255 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 1572 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.001)]
] -86.7 MRshow
1.000 UL
LTb
1534 1889 M
31 0 V
5193 0 R
-31 0 V
1534 2074 M
31 0 V
5193 0 R
-31 0 V
1534 2205 M
31 0 V
5193 0 R
-31 0 V
1534 2307 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 2624 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.01)]
] -86.7 MRshow
1.000 UL
LTb
1534 2941 M
31 0 V
5193 0 R
-31 0 V
1534 3126 M
31 0 V
5193 0 R
-31 0 V
1534 3257 M
31 0 V
5193 0 R
-31 0 V
1534 3359 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 3676 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 0.1)]
] -86.7 MRshow
1.000 UL
LTb
1534 3993 M
31 0 V
5193 0 R
-31 0 V
1534 4178 M
31 0 V
5193 0 R
-31 0 V
1534 4309 M
31 0 V
5193 0 R
-31 0 V
1534 4411 M
31 0 V
5193 0 R
-31 0 V
-5193 84 R
31 0 V
5193 0 R
-31 0 V
-5193 70 R
31 0 V
5193 0 R
-31 0 V
-5193 61 R
31 0 V
5193 0 R
-31 0 V
-5193 54 R
31 0 V
5193 0 R
-31 0 V
-5193 48 R
63 0 V
5161 0 R
-63 0 V
stroke
1378 4728 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1)]
] -86.7 MRshow
1.000 UL
LTb
1534 520 M
0 31 V
0 4177 R
0 -31 V
1644 520 M
0 31 V
0 4177 R
0 -31 V
1741 520 M
0 31 V
0 4177 R
0 -31 V
1828 520 M
0 63 V
0 4145 R
0 -63 V
stroke
1828 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 100)]
] -86.7 MCshow
1.000 UL
LTb
2398 520 M
0 31 V
0 4177 R
0 -31 V
2732 520 M
0 31 V
0 4177 R
0 -31 V
2968 520 M
0 31 V
0 4177 R
0 -31 V
3152 520 M
0 31 V
0 4177 R
0 -31 V
3302 520 M
0 31 V
0 4177 R
0 -31 V
3429 520 M
0 31 V
0 4177 R
0 -31 V
3539 520 M
0 31 V
0 4177 R
0 -31 V
3636 520 M
0 31 V
0 4177 R
0 -31 V
3722 520 M
0 63 V
0 4145 R
0 -63 V
stroke
3722 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 1000)]
] -86.7 MCshow
1.000 UL
LTb
4293 520 M
0 31 V
0 4177 R
0 -31 V
4626 520 M
0 31 V
0 4177 R
0 -31 V
4863 520 M
0 31 V
0 4177 R
0 -31 V
5047 520 M
0 31 V
0 4177 R
0 -31 V
5197 520 M
0 31 V
0 4177 R
0 -31 V
5324 520 M
0 31 V
0 4177 R
0 -31 V
5434 520 M
0 31 V
0 4177 R
0 -31 V
5530 520 M
0 31 V
0 4177 R
0 -31 V
5617 520 M
0 63 V
0 4145 R
0 -63 V
stroke
5617 260 M
[ [(Helvetica) 260.0 0.0 true true 0 ( 10000)]
] -86.7 MCshow
1.000 UL
LTb
6188 520 M
0 31 V
0 4177 R
0 -31 V
6521 520 M
0 31 V
0 4177 R
0 -31 V
6758 520 M
0 31 V
0 4177 R
0 -31 V
stroke
1534 4728 N
0 -4208 V
5224 0 V
0 4208 V
-5224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 260 scalefont setfont
2022 2618 M
86 502 V
85 408 V
85 273 V
86 247 V
85 175 V
85 85 V
86 169 V
85 77 V
85 52 V
86 63 V
85 -7 V
85 21 V
86 42 V
85 -36 V
85 28 V
86 11 V
85 -57 V
85 14 V
86 -1 V
85 -14 V
86 -27 V
85 -46 V
85 -16 V
86 -17 V
85 -46 V
85 -2 V
86 -15 V
85 -58 V
85 -1 V
86 -50 V
85 -9 V
85 -64 V
86 -29 V
85 -22 V
85 -4 V
86 -80 V
85 -18 V
85 -73 V
86 20 V
85 -42 V
85 -34 V
86 -23 V
85 12 V
86 -125 V
85 35 V
85 -54 V
86 19 V
85 -70 V
85 -150 V
2022 2618 Pls
2108 3120 Pls
2193 3528 Pls
2278 3801 Pls
2364 4048 Pls
2449 4223 Pls
2534 4308 Pls
2620 4477 Pls
2705 4554 Pls
2790 4606 Pls
2876 4669 Pls
2961 4662 Pls
3046 4683 Pls
3132 4725 Pls
3217 4689 Pls
3302 4717 Pls
3388 4728 Pls
3473 4671 Pls
3558 4685 Pls
3644 4684 Pls
3729 4670 Pls
3815 4643 Pls
3900 4597 Pls
3985 4581 Pls
4071 4564 Pls
4156 4518 Pls
4241 4516 Pls
4327 4501 Pls
4412 4443 Pls
4497 4442 Pls
4583 4392 Pls
4668 4383 Pls
4753 4319 Pls
4839 4290 Pls
4924 4268 Pls
5009 4264 Pls
5095 4184 Pls
5180 4166 Pls
5265 4093 Pls
5351 4113 Pls
5436 4071 Pls
5521 4037 Pls
5607 4014 Pls
5692 4026 Pls
5778 3901 Pls
5863 3936 Pls
5948 3882 Pls
6034 3901 Pls
6119 3831 Pls
6204 3681 Pls
1.000 UP
1.000 UL
LT1
/Helvetica findfont 260 scalefont setfont
2132 1804 M
91 131 V
91 799 V
91 461 V
91 298 V
91 254 V
91 227 V
91 172 V
90 193 V
91 99 V
91 91 V
91 84 V
91 59 V
91 17 V
91 39 V
91 -2 V
91 -15 V
91 -21 V
91 -29 V
91 20 V
91 -40 V
91 -76 V
91 -47 V
91 -31 V
90 -87 V
91 -48 V
91 -36 V
91 -57 V
91 -145 V
91 -42 V
91 -101 V
91 -50 V
91 -29 V
91 -188 V
91 -48 V
91 -97 V
91 -6 V
91 -147 V
91 -80 V
91 -58 V
91 -248 V
90 0 V
91 -196 V
91 75 V
91 -360 V
91 -233 V
91 -186 V
91 -83 V
91 -419 V
91 0 V
2132 1804 Crs
2223 1935 Crs
2314 2734 Crs
2405 3195 Crs
2496 3493 Crs
2587 3747 Crs
2678 3974 Crs
2769 4146 Crs
2859 4339 Crs
2950 4438 Crs
3041 4529 Crs
3132 4613 Crs
3223 4672 Crs
3314 4689 Crs
3405 4728 Crs
3496 4726 Crs
3587 4711 Crs
3678 4690 Crs
3769 4661 Crs
3860 4681 Crs
3951 4641 Crs
4042 4565 Crs
4133 4518 Crs
4224 4487 Crs
4314 4400 Crs
4405 4352 Crs
4496 4316 Crs
4587 4259 Crs
4678 4114 Crs
4769 4072 Crs
4860 3971 Crs
4951 3921 Crs
5042 3892 Crs
5133 3704 Crs
5224 3656 Crs
5315 3559 Crs
5406 3553 Crs
5497 3406 Crs
5588 3326 Crs
5679 3268 Crs
5770 3020 Crs
5860 3020 Crs
5951 2824 Crs
6042 2899 Crs
6133 2539 Crs
6224 2306 Crs
6315 2120 Crs
6406 2037 Crs
6497 1618 Crs
6588 1618 Crs
1.000 UP
1.000 UL
LT2
/Helvetica findfont 260 scalefont setfont
2258 1763 M
79 -502 V
80 889 V
80 581 V
80 344 V
80 325 V
79 275 V
80 193 V
80 213 V
80 135 V
79 155 V
80 90 V
80 106 V
80 63 V
79 36 V
80 28 V
80 34 V
80 0 V
80 -6 V
79 -58 V
80 -32 V
80 -8 V
80 -52 V
79 -64 V
80 -64 V
80 -58 V
80 -67 V
79 -113 V
80 -72 V
80 -108 V
80 -91 V
79 -56 V
80 -94 V
80 -90 V
80 -82 V
80 -111 V
79 -222 V
80 16 V
80 -188 V
80 -108 V
79 -156 V
80 -77 V
80 -212 V
80 -122 V
79 -77 V
80 -145 V
80 -61 V
80 -387 V
80 131 V
0 -1374 V
2258 1763 Star
2337 1261 Star
2417 2150 Star
2497 2731 Star
2577 3075 Star
2657 3400 Star
2736 3675 Star
2816 3868 Star
2896 4081 Star
2976 4216 Star
3055 4371 Star
3135 4461 Star
3215 4567 Star
3295 4630 Star
3374 4666 Star
3454 4694 Star
3534 4728 Star
3614 4728 Star
3694 4722 Star
3773 4664 Star
3853 4632 Star
3933 4624 Star
4013 4572 Star
4092 4508 Star
4172 4444 Star
4252 4386 Star
4332 4319 Star
4411 4206 Star
4491 4134 Star
4571 4026 Star
4651 3935 Star
4730 3879 Star
4810 3785 Star
4890 3695 Star
4970 3613 Star
5050 3502 Star
5129 3280 Star
5209 3296 Star
5289 3108 Star
5369 3000 Star
5448 2844 Star
5528 2767 Star
5608 2555 Star
5688 2433 Star
5767 2356 Star
5847 2211 Star
5927 2150 Star
6007 1763 Star
6087 1894 Star
1.000 UL
LTb
1534 4728 N
0 -4208 V
5224 0 V
0 4208 V
-5224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
